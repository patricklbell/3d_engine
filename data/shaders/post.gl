#ifdef COMPILING_VS
layout (location = 0) in vec3 position;

void main()
{
    gl_Position = vec4(position, 1.0);
}
#endif

#ifdef COMPILING_FS
out vec4 out_color;

uniform sampler2D   pixelMap;
uniform vec2        screenSize;

vec2 calcTexCoord()
{
   return gl_FragCoord.xy / screenSize;
} 

void main()
{
    vec2 texcoord = calcTexCoord();
    vec3 hdr_color = texture(pixelMap, texcoord).xyz;
   
    const float gamma = 1.6;

    // reinhard tone mapping
    vec3 mapped = hdr_color / (hdr_color + vec3(1.0));

    // gamma correction 
    mapped = pow(mapped, vec3(1.0 / gamma));
  
    out_color = vec4(mapped, 1.0);
} 
#endif
