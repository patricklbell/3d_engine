#ifdef COMPILING_VS
layout (location = 0) in vec3 in_position;
layout (location = 1) in vec2 in_texcoord;

out vec2 texcoord;

void main()
{
    texcoord = in_texcoord;
    gl_Position = vec4(in_position.xyz, 1.0);
}
#endif

#ifdef COMPILING_FS

in vec2 texcoord;

out vec4 out_color;

uniform sampler2D   pixel_map;
uniform sampler2D   bloom_map;

void main()
{
    vec3 hdr_color = texture(pixel_map, texcoord).xyz;
    vec3 bloom_color = texture(bloom_map, texcoord).xyz;
    hdr_color += bloom_color; // additive blending 

    const float gamma = 1.6;

    // reinhard tone mapping
    vec3 mapped = hdr_color / (hdr_color + vec3(1.0));

    // gamma correction 
    mapped = pow(mapped, vec3(1.0 / gamma));
  
    out_color = vec4(mapped, 1.0);
} 
#endif
