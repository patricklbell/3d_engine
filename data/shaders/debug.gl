#ifdef COMPILING_VS
layout (location = 0) in vec3 in_position;
layout (location = 1) in vec3 in_normal;

uniform mat4 mvp;
uniform mat4 model;

out vec3 normal;

void main()
{
    gl_Position = mvp * vec4(in_position, 1.0);
    normal = (model*vec4(in_normal, 1.0)).xyz;
}
#endif

#ifdef COMPILING_FS

in vec3 normal;

out vec4 out_color;

uniform vec3 sun_direction;
uniform vec4 color;
uniform vec4 color_flash_to;
uniform float flashing;
uniform float shaded;
uniform float time;

#define PI                 3.14159265359f

void main()
{
    vec4 color1 = color;
    if(flashing==1.0f){
        color1 = mix(color, color_flash_to, (1.0f+sin(2.0f*PI*time - PI * 0.5f)) / 2.0f);
    }
    if(shaded==1.0f){
        out_color = vec4((0.3 + max(0.7*dot(normal, -sun_direction), 0))*color1.rgb, color1.a);
    } else {
        out_color = color1;
    }
} 
#endif
